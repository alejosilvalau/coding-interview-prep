class Solution:
  def leastInterval(self, tasks: List[str], n: int) -> int:
    counter = Counter(tasks)
    maxHeap = [-count for count in counter.values()]
    heapq.heapify(maxHeap)

    currTime = 0
    # Declare a queue, that will contain pairs of [-count, resumeTime]
    queue = deque()
    while maxHeap or queue:
      currTime += 1

      if not maxHeap:
        currTime = queue[0][1]
      else:
        count = -heapq.heappop(maxHeap) - 1
        if count: 
          queue.append([-count, currTime + n])
      
      if queue and queue[0][1] == currTime:
        heapq.heappush(maxHeap, queue.popleft()[0])
    return currTime