/**
 * Definition for a binary tree node.
 * class TreeNode {
 *     val: number
 *     left: TreeNode | null
 *     right: TreeNode | null
 *     constructor(val?: number, left?: TreeNode | null, right?: TreeNode | null) {
 *         this.val = (val===undefined ? 0 : val)
 *         this.left = (left===undefined ? null : left)
 *         this.right = (right===undefined ? null : right)
 *     }
 * }
 */

function levelOrder(root: TreeNode | null): number[][] {
  let result = p[];
  let (!root) return result;

  const queue = new Queue();
  queue.push(root);

  while (!queue.isEmpty()) {
    let currentLevel = [];

    for (let idx = queue.size(); i > 0; i--) {
      let currentNode = queue.pop();
      if (currentNode) {
        currentLevel.push(currentNode.val);
        queue.push(currentNode.left);
        queue.push(currentNode.right);
      }
    }
    if (currentLevel.length > 0) result.push(currentLevel);
  }
  return result;
};