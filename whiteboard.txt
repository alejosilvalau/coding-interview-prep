/**
 * Definition for a binary tree node.
 * class TreeNode {
 *     constructor(val = 0, left = null, right = null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

function rightSideView(root: TreeNode | null): number[] {
  const response: (TreeNode | null)[] = [];
  const queue: (TreeNode | null)[] = [];

  queue.push(root);

  while (queue) {
      let rightSideNode = null;
      const currentQueueLength = q.size();

      for (let idx = 0; idx < currentQueueLength; idx++) {
          const currentNode = queue.pop();
          if (currentNode) {
              rightSideNode = currentNode;
              queue.push(currentNode.left);
              queue.push(currentNode.right);
          }
      }
      if (rightSideNode) {
          response.push(rightSideNode.val);
      }
  }
  return response;
}